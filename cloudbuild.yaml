# Cloud Build configuration for Google Cloud Run deployment
steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/sonic-467415/sonic-api/sonic-api:$COMMIT_SHA', '.']
  
  # Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/sonic-467415/sonic-api/sonic-api:$COMMIT_SHA']

  # Build migration image with EF tools and Cloud SQL proxy
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'migration-runner', '-f', 'Dockerfile.migrations', '.']

  # Run migrations using gcloud with direct database connection
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      # Install .NET SDK
      wget https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      dpkg -i packages-microsoft-prod.deb
      apt-get update
      apt-get install -y dotnet-sdk-9.0
      
      # Install EF tools
      dotnet tool install --global dotnet-ef
      export PATH="$$PATH:/root/.dotnet/tools"
      
      # Copy source code
      cd /workspace
      
      # Run migrations using Cloud SQL connection
      export SONIC_AUTH_DB_CONNECTION_STRING="Server=35.225.141.34;Port=5432;Database=Sonic-Prod;User Id=postgres;Password=mfh9.+=Y/Jn\"u]l/;Trust Server Certificate=true;"
      dotnet ef database update --context SonicDbContext --verbose

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'sonic-api'
      - '--image=us-central1-docker.pkg.dev/sonic-467415/sonic-api/sonic-api:$COMMIT_SHA'
      - '--platform=managed'
      - '--region=us-central1'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--max-instances=10'
      - '--set-env-vars=ASPNETCORE_ENVIRONMENT=Production'
      - '--set-secrets=SONIC_AUTH_DB_CONNECTION_STRING=SONIC_AUTH_DB_CONNECTION_STRING:latest'
      - '--set-secrets=TOKEN=TOKEN:latest'
      - '--set-secrets=GOOGLEAUTH_CLIENT_ID=GOOGLEAUTH_CLIENT_ID:latest'
      - '--set-secrets=GOOGLEAUTH_CLIENT_SECRET=GOOGLEAUTH_CLIENT_SECRET:latest'
      - '--set-secrets=SPOTIFY_CLIENT_ID=SPOTIFY_CLIENT_ID:latest'
      - '--set-secrets=SPOTIFY_CLIENT_SECRET=SPOTIFY_CLIENT_SECRET:latest'
      - '--set-secrets=SPOTIFY_TOKEN_URL=SPOTIFY_TOKEN_URL:latest'
      - '--set-secrets=ISSUER=ISSUER:latest'
      - '--set-secrets=AUDIENCE=AUDIENCE:latest'
      - '--set-secrets=GOOGLE_MAPS_API_KEY=GOOGLE_MAPS_API_KEY:latest'
      - '--set-secrets=GOOGLE_FIELDMASK_PLACE_AUTOCOMPLETE=GOOGLE_FIELDMASK_PLACE_AUTOCOMPLETE:latest'
      - '--set-secrets=GOOGLE_FIELDMASK_PLACE_DETAILS=GOOGLE_FIELDMASK_PLACE_DETAILS:latest'
      - '--add-cloudsql-instances=sonic-467415:us-central1:sonic-postgre'

# Specify the machine type for Cloud Build
options:
  machineType: 'E2_HIGHCPU_8'
  logging: 'CLOUD_LOGGING_ONLY'

# Use default Cloud Build service account (recommended)
# If you need a custom service account, add:
# serviceAccount: 'projects/sonic-467415/serviceAccounts/your-service-account@sonic-467415.iam.gserviceaccount.com'

# Store images in Artifact Registry
images:
  - 'us-central1-docker.pkg.dev/sonic-467415/sonic-api/sonic-api:$COMMIT_SHA'
